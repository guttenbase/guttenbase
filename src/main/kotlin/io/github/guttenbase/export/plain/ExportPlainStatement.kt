package io.github.guttenbase.export.plain

import java.io.InputStream
import java.io.Reader
import java.math.BigDecimal
import java.net.URL
import java.sql.*
import java.sql.Date
import java.util.*

/**
 * Connection info for exporting data to a file.
 *
 *  &copy; 2024-2044 akquinet tech@spree
 *
 * @author M. Dahm
 */
class ExportPlainStatement(private var sql: String, private val connection: ExportPlainConnection) : PreparedStatement {
  private var closed = false

  override fun <T : Any?> unwrap(iface: Class<T>?): T {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun isWrapperFor(iface: Class<*>?) = false

  override fun close() {
    if (sql.isNotBlank() && !closed) {
      executeUpdate()
    }

    closed = true
    sql = ""
  }

  override fun addBatch() {
  }

  override fun addBatch(sql: String) {
    this.sql = sql
  }

  override fun clearBatch() {
    sql = ""
  }

  override fun executeBatch() = intArrayOf(1)

  override fun executeUpdate(): Int {
    connection.addStatement(sql)
    return 1
  }

  override fun executeUpdate(sql: String): Int {
    this.sql = sql
    return executeUpdate()
  }

  override fun executeUpdate(sql: String, autoGeneratedKeys: Int) = executeUpdate(sql)

  override fun executeUpdate(sql: String, columnIndexes: IntArray?) = executeUpdate(sql)

  override fun executeUpdate(sql: String, columnNames: Array<out String>) = executeUpdate(sql)

  override fun getConnection() = connection

  override fun execute() = execute(sql)

  override fun execute(sql: String): Boolean {
    executeUpdate(sql)
    return true
  }

  override fun execute(sql: String, autoGeneratedKeys: Int) = execute(sql)

  override fun execute(sql: String, columnIndexes: IntArray) = execute(sql)

  override fun execute(sql: String, columnNames: Array<out String>) = execute(sql)

  override fun getResultSet(): ResultSet {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getUpdateCount() = 1


  override fun executeQuery(): ResultSet {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun executeQuery(sql: String): ResultSet {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getMaxFieldSize(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setMaxFieldSize(max: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getMaxRows(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setMaxRows(max: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setEscapeProcessing(enable: Boolean) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getQueryTimeout(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setQueryTimeout(seconds: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun cancel() {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getWarnings(): SQLWarning {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun clearWarnings() {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setCursorName(name: String?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getMoreResults(): Boolean {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getMoreResults(current: Int): Boolean {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setFetchDirection(direction: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getFetchDirection(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setFetchSize(rows: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getFetchSize(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getResultSetConcurrency(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getResultSetType(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getGeneratedKeys(): ResultSet {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getResultSetHoldability(): Int {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun isClosed() = closed

  override fun setPoolable(poolable: Boolean) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun isPoolable(): Boolean {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun closeOnCompletion() {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun isCloseOnCompletion(): Boolean {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNull(parameterIndex: Int, sqlType: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNull(parameterIndex: Int, sqlType: Int, typeName: String?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBoolean(parameterIndex: Int, x: Boolean) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setByte(parameterIndex: Int, x: Byte) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setShort(parameterIndex: Int, x: Short) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setInt(parameterIndex: Int, x: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setLong(parameterIndex: Int, x: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setFloat(parameterIndex: Int, x: Float) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setDouble(parameterIndex: Int, x: Double) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBigDecimal(parameterIndex: Int, x: BigDecimal?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setString(parameterIndex: Int, x: String?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBytes(parameterIndex: Int, x: ByteArray?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setDate(parameterIndex: Int, x: Date?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setDate(parameterIndex: Int, x: Date?, cal: Calendar?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setTime(parameterIndex: Int, x: Time?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setTime(parameterIndex: Int, x: Time?, cal: Calendar?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setTimestamp(parameterIndex: Int, x: Timestamp?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setTimestamp(parameterIndex: Int, x: Timestamp?, cal: Calendar?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setAsciiStream(parameterIndex: Int, x: InputStream?, length: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setAsciiStream(parameterIndex: Int, x: InputStream?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setAsciiStream(parameterIndex: Int, x: InputStream?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setUnicodeStream(parameterIndex: Int, x: InputStream?, length: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBinaryStream(parameterIndex: Int, x: InputStream?, length: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBinaryStream(parameterIndex: Int, x: InputStream?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBinaryStream(parameterIndex: Int, x: InputStream?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun clearParameters() {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setObject(parameterIndex: Int, x: Any?, targetSqlType: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setObject(parameterIndex: Int, x: Any?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setObject(parameterIndex: Int, x: Any?, targetSqlType: Int, scaleOrLength: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setCharacterStream(parameterIndex: Int, reader: Reader?, length: Int) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setCharacterStream(parameterIndex: Int, reader: Reader?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setCharacterStream(parameterIndex: Int, reader: Reader?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setRef(parameterIndex: Int, x: Ref?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBlob(parameterIndex: Int, x: Blob?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBlob(parameterIndex: Int, inputStream: InputStream?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setBlob(parameterIndex: Int, inputStream: InputStream?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setClob(parameterIndex: Int, x: Clob?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setClob(parameterIndex: Int, reader: Reader?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setClob(parameterIndex: Int, reader: Reader?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setArray(parameterIndex: Int, x: java.sql.Array?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getMetaData(): ResultSetMetaData {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setURL(parameterIndex: Int, x: URL?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun getParameterMetaData(): ParameterMetaData {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setRowId(parameterIndex: Int, x: RowId?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNString(parameterIndex: Int, value: String?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNCharacterStream(parameterIndex: Int, value: Reader?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNCharacterStream(parameterIndex: Int, value: Reader?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNClob(parameterIndex: Int, value: NClob?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNClob(parameterIndex: Int, reader: Reader?, length: Long) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setNClob(parameterIndex: Int, reader: Reader?) {
    throw UnsupportedOperationException("Not implemented")
  }

  override fun setSQLXML(parameterIndex: Int, xmlObject: SQLXML?) {
    throw UnsupportedOperationException("Not implemented")
  }
}